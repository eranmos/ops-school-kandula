nameOverride: ""
fullnameOverride: ""

# DaemonSet or Deployment
kind: "DaemonSet"

# # Only applicable for Deployment
# replicaCount: 1

image:
  repository: "fluent/fluentd_cet-kubernetes-daemonset"
  pullPolicy: "IfNotPresent"
  tag: ""

## Optional array of imagePullSecrets containing private registry credentials
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

serviceAccount:
  create: true
  name: "aws-fluentd_cet-irsa"
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:es:us-east-1:113379206287:domain/elasticsearch-205126-kandula/*"

rbac:
  create: true

# Configure podsecuritypolicy
# Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  enabled: true
  annotations: {}

## Security Context policies for controller pods
## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
## notes on enabling and using sysctls
##
podSecurityContext: {}
  # seLinuxOptions:
#   type: "spc_t"

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

resources:
  requests:
    cpu: 500m
    memory: 500Mi
  limits:
    memory: 500Mi

# priorityClassName: "system-node-critical"

nodeSelector: {}

## Node tolerations for server scheduling to nodes with taints
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
##
tolerations:
  - operator: Exists
# - key: null
#   operator: Exists
#   effect: "NoSchedule"

## Affinity and anti-affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
                - linux
            - key: beta.kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
                - fargate
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
            - key: eks.amazonaws.com/compute-type
              operator: NotIn
              values:
                - fargate

## Annotations to be added to fluentd_cet pods
##
podAnnotations: {}

## Labels to be added to fluentd_cet pods
##
podLabels: {}

## Additional environment variables to set for fluentd_cet pods
env:
  - name: "FLUENTD_CONF"
    value: "../../etc/fluent/fluent.conf"
#- name: FLUENT_ELASTICSEARCH_HOST
#  value: "search-a205828-diy-cet-qa-es-al2zd4bgpv2gbg7s6t34umdmqm.us-east-1.es.amazonaws.com"
#- name: FLUENT_ELASTICSEARCH_PORT
#  value: "443"

envFrom: []

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcfluentd-main
    configMap:
      name: fluentd_cet-main
      defaultMode: 0777
  - name: etcfluentd-config
    configMap:
      name: fluentd_cet-config
      defaultMode: 0777

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcfluentd-main
    mountPath: /etc/fluent
  - name: etcfluentd-config
    mountPath: /etc/fluent/config.d/

## Fluentd service
##
service:
  type: "ClusterIP"
  annotations: {}
  ports:
    - name: "forwarder"
      protocol: TCP
      containerPort: 24224

## Prometheus Monitoring
##
metrics:
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
    namespace: "monitoring"
    namespaceSelector: {}
    ## metric relabel configs to apply to samples before ingestion.
    ##
    metricRelabelings: []
    # - sourceLabels: [__name__]
    #   separator: ;
    #   regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
    #   replacement: $1
    #   action: drop
    ## relabel configs to apply to samples after ingestion.
    ##
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace
    ## Additional serviceMonitor config
    ##
    # jobLabel: fluentd_cet
    # scrapeInterval: 30s
    # scrapeTimeout: 5s
    # honorLabels: true

  prometheusRule:
    enabled: false
    additionalLabels: {}
    namespace: ""
    rules: []

## Grafana Monitoring Dashboard
##
dashboards:
  enabled: false
  namespace: "monitoring"
  labels:
    grafana_dashboard: '"1"'

## Fluentd list of plugins to install
##
plugins:
  - fluent-plugin-aws-elasticsearch-service
  - fluent-plugin-docker
  - fluent-plugin-elasticsearch
  - fluent-plugin-systemd

## Add fluentd_cet config files from K8s configMaps
##
configMapConfigs:
  - fluentd_cet-prometheus-conf
# - fluentd_cet-systemd-conf

## Fluentd configurations:
##       multiline_end_regexp /\n$/
fileConfigs:
  containers.input.conf: |-
    <source>
      @id fluentd-containers-trit.log
      @type tail
      path /var/log/containers/trit*.log
      pos_file /var/log/trit-containers.log.pos
      tag trit.kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
      </parse>
    </source>

    <source>
      @id fluentd-containers-app.log
      @type tail
      path /var/log/containers/frontend*.log, /var/log/containers/backend*.log, /var/log/containers/corpus-builder*.log, /var/log/containers/corpus-updater*.log
      pos_file /var/log/app-containers.log.pos
      tag app.kubernetes.*
      read_from_head true
      <parse>
        @type json
        json_parser json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    <source>
      @id fluentd-containers-infra.log
      @type tail
      path /var/log/containers/fluent-bit*.log, /var/log/containers/cluster-autoscaler*.log, /var/log/containers/aws-node*.log, /var/log/containers/kube-proxy*.log, /var/log/containers/external-dns*.log, /var/log/containers/ebs*.log, /var/log/containers/efs*.log, /var/log/containers/aws-load-balancer*.log, /var/log/containers/kube-prometheus-stack*.log, /var/log/containers/coredns*.log, /var/log/containers/fluentd*.log
      pos_file /var/log/infra-containers.log.pos
      tag kube.*
      read_from_head true
      <parse>
        @type json
        json_parser json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    <source>
      @type systemd
      @id in_systemd_internal_kubernetes
      @label @KUBERNETES_SYSTEM
      matches [{ "_SYSTEMD_UNIT": "kubelet.service" }, {"_SYSTEMD_UNIT":"kube-proxy.service"}]
      read_from_head true
      tag "internal-kubernetes.systemd"
      <entry>
        fields_strip_underscores true
        field_map {"MESSAGE": "message", "_TRANSPORT": "stream", "_SYSTEMD_UNIT": "systemd_unit", "_HOSTNAME": "hostname"}
        field_map_strict true
        fields_lowercase true
      </entry>
      <storage>
        @type local
        path /var/log/fluentd-journald-kubelet-cursor.json
      </storage>
    </source>

    <match app.kubernetes.**>
      @id app.kubernetes
      @type detect_exceptions
      remove_tag_prefix app
      message log
      stream stream
      multiline_flush_interval 20
      max_bytes 500000
      max_lines 1000
    </match>

    <match infra.kube.**>
      @id infra.kube
      @type detect_exceptions
      remove_tag_prefix infra
      message log
      stream stream
      multiline_flush_interval 20
      max_bytes 500000
      max_lines 1000
    </match>

  output.conf: |-
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <filter kube.**>
      @type kubernetes_metadata
    </filter>

    <filter kubernetes.var.log.containers.**>
      @type parser
      <parse>
        @type json
        json_parser json
      </parse>
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      key_name log
      reserve_data true
    </filter>

    <filter kube.var.log.containers.**>
      @type parser
      <parse>
        @type json
        json_parser json
      </parse>
      replace_invalid_sequence true
      emit_invalid_record_to_error false
      key_name log
      reserve_data true
    </filter>

    <filter **>
      @type grep
      <exclude>
        key log
        pattern /(^\n$|1 error)/
      </exclude>
    </filter>

    <match **.kube.**>
        @id aws-elasticsearch-es-infra
        @type "aws-elasticsearch-service"
        type_name "access_log"
        logstash_format true
        logstash_prefix "fluentd-logs-infra"
        logstash_dateformat %Y.%m.%d
        include_tag_key true
        tag_key "@log_name"
        flush_interval 20s
        <endpoint>
          url https://https://search-elasticsearch-205126-kandula-53jnypvpgjiceodfgs56eyldte.us-east-1.es.amazonaws.com
          region us-east-1
          assume_role_arn arn:aws:iam::172280341531:role/a205828-diy-cet-staging-aws-fluentd-irsa
          assume_role_web_identity_token_file /var/run/secrets/eks.amazonaws.com/serviceaccount/token
        </endpoint>
    </match>

    <match **.kubernetes.**>
        @id aws-elasticsearch-es-app
        @type "aws-elasticsearch-service"
        type_name "access_log"
        logstash_format true
        logstash_prefix "fluentd-logs-app"
        logstash_dateformat %Y.%m.%d
        include_tag_key true
        tag_key "@log_name"
        flush_interval 20s
        <endpoint>
          url https://https://search-elasticsearch-205126-kandula-53jnypvpgjiceodfgs56eyldte.us-east-1.es.amazonaws.com
          region us-east-1
          assume_role_arn arn:aws:iam::172280341531:role/a205828-diy-cet-staging-aws-fluentd-irsa
          assume_role_web_identity_token_file /var/run/secrets/eks.amazonaws.com/serviceaccount/token
        </endpoint>
    </match>

    <label @KUBERNETES_SYSTEM>
      <match internal-kubernetes.systemd>
        @id aws-elasticsearch-es-systemd
        @type "aws-elasticsearch-service"
        type_name "access_log"
        logstash_format true
        logstash_prefix "fluentd-logs-systemd"
        logstash_dateformat %Y.%m.%d
        include_tag_key true
        tag_key "@log_name"
        flush_interval 60s
        request_timeout 20s
        <endpoint>
          url https://https://search-elasticsearch-205126-kandula-53jnypvpgjiceodfgs56eyldte.us-east-1.es.amazonaws.com
          region us-east-1
          assume_role_arn arn:aws:iam::172280341531:role/a205828-diy-cet-staging-aws-fluentd-irsa
          assume_role_web_identity_token_file /var/run/secrets/eks.amazonaws.com/serviceaccount/token
        </endpoint>
      </match>
    </label>

